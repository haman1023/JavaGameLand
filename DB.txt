

SELECT * FROM shopdb; //  검색

DROP USER director  //  디렉터 제거

CREATE USER 유저명@호스트 IDENTIFIED BY '비밀번호';   //  유저 생성
GRANT 권한 ON 테이블이름 TO 유저명@호스트 [WITH GRANT OPTION]  //  유저권한 설정, []는 선택 WITH GRANT OPTION은 다른사람에게 권한을 줄수있는것

USE MySQL;  //  MySQL DB를 사용한다.
DESC USER;  //  테이블의 구조를 알 수 있다.
SELECT HOST, USER FROM USER;  //  USER table 의 USER, HOST만 검색

SHOW DATABASES; //  데이터베이스 검색
SHOW TABLE STATUS;  //  TABLE들의 정보를 알려준다.

SELECT empno AS 사원번호, ename AS 사원이름, comm AS 커미션 FROM emp WHERE comm IS NULL; //  NULL값인 것을 찾는것
SELECT empno AS 사원번호, ename AS 사원이름, comm AS 커미션 FROM emp WHERE comm IS NOT NULL; //  NULL값이 아닌것을 찾는것




--------------- 리눅스 명령어 -----------------
mysql -u root -p  //  mysql 접속

//  비번설정 낮게 바꾸기
set global validate_password_policy=0;
set global validate_password_length=0;

show variables like '%password%';

//  설정파일 (위 명령어 쓰면 리눅스 킬때마다 설정가능)
vi /etc/my.cnf




--------------- MySQL 명령어 -----------------


==============================
DDL = 데이터 정의어(Definition)
==============================

CREATE(생성) ALTER(수정) DROP(제거)

------  CREATE 사용방법 ------
CREATE DATABASE DB이름; //  DB생성
CRATE TABLE TABLE이름 (
  열이름 데이터타입 타입제약조건,
  열이름 데이터타입.....);

------  ALTER 사용방법 ------
ALTER TABLE TABLE이름 RENAME 새TABLE이름; //  TABLE 이름 변경
ALTER TABLE TABLE이름 MODIFY 열이름 새데이터타입;  //  TABLE의 열 데이터타입 변경
ALTER TABLE TABLE이름 MODIFY 열이름 데이터타입 옵션; //  TABLE의 열 데이터타입의 옵션 변경
ALTER TABLE TABLE이름 CHANGE 열이름 새열이름 데이터타입;  //  TABLE의 열 이름 변경
ALTER TABLE TABLE이름 ADD 제약조건;  //  ?????

ALTER TABLE TABLE이름 ADD (CONSTRAINT-생략가능) FOREIGN KEY(열이름) REFERENCES 참조테이블(열이름);
ALTER TABLE TABLE이름 ADD (COLUMN-생략가능) 열이름 데이터타입 제약조건;  //  열추가
// ADD 다음에 무엇을 추가할지 쓴다. ex) COLUMN, CONSTRAINT 등등

ALTER TABLE TABLE이름 DROP 열이름;  //  열 제거

------  DROP 사용방법 ------
DROP DATABASE DB이름;
DROP TABLE TABLE이름;

================================
DML = 데이터 조작어(Manipulation)
================================
SELECT(검색) INSERT(삽입) DELETE(삭제) UPDATE(수정)

------  SELECT 사용방법 ------
SELECT 열이름 FROM DB이름.TABLE이름;    //  열 검색, DB를 사용하지 않아도 검색된다.
SELECT 열이름 FROM 테이블이름;    //  열 검색
SELECT 열이름 AS 별칭 FROM 테이블이름;  // 결과를 보여줄때 열이름을 별칭으로 바꾼다

SELECT 열이름 FROM 테이블이름 WHERE 조건;
SELECT 열이름 FROM 테이블이름 WHERE 조건 and 조건;  //  여러조건을 넣을 경우
SELECT 열이름 FROM 테이블이름 WHERE 열이름 BETWEEN A and B;  //  열이름에서 A와 B사이의 값
SELECT 열이름 FROM 테이블이름 WHERE 열이름 IN ('A', 'B', 'C');  //  열이름에서 A,B,C의 값을 고를때

-- SELECT - 와일드카드
SELECT 열이름 FROM 테이블이름 WHERE 열이름 LIKE '김%';  //  김으로 시작하는 모든것
SELECT 열이름 FROM 테이블이름 WHERE 열이름 LIKE '_종신'; //  _의 갯수만큼 +종신

-- SELECT - SubQuery
SELECT 열이름 FROM 테이블이름 WHERE 열이름 조건(SELECT 열이름 FROM 테이블이름 WHERE 조건);  //  조건의 결과값으로 조건을 구할때
ex)
SELECT * FROM usertbl WHERE height >= (SELECT height FROM usertbl WHERE name="김경호");

연산자 ANY - 하위쿼리를 만족하는 값들 중 어느하나만 조건을 만족해도 될 때(OR)
연산자 ALL - 하위쿼리를 만족하는 값들 중 모두에 대해서 조건이 만족해야 할때(AND)
= ANY 는 IN 과 같다.

-- SELECT - ORDER BY
SELECT 열이름 FROM 테이블이름 [WHERE 조건] ORDER BY 열이름 ASC/DESC;  //  열이름 순으로 정렬해서 보여준다.(기본정렬은 오름차순)
SELECT 열이름 FROM 테이블이름 [WHERE 조건] ORDER BY 열이름1 ASC/DESC, 열이름2 ASC/DESC; //  열이름 1로 정렬하고 같을경우 열이름 2로 정렬

-- SELECT - DISTINCT
SELECT DISTINCT 열이름 FROM 테이블이름 [WHERE 조건] [ORDER BY 열이름];  //  중복된것을 제거해준다

-- SELECT - LIMIT
SELECT 열이름 FROM 테이블이름 [WHERE 조건] [ORDER BY 열이름] LIMIT 개수;   //  개수만큼 보여준다.
SELECT 열이름 FROM 테이블이름 [WHERE 조건] [ORDER BY 열이름] LIMIT 시작위치, 개수;   //  원하는 위치에서 개수만큼 보여준다
SELECT 열이름 FROM 테이블이름 [WHERE 조건] [ORDER BY 열이름] LIMIT 개수 OFFSET 위치;   //  원하는 위치에서 개수만큼 보여준다



------  INSERT 사용방법 ------
INSERT INTO 테이블이름 (열이름, 열이름, ........) VALUES (데이터, 데이터, ........); //  데이터 입력
INSERT INTO 테이블이름 VALUES (데이터, 데이터, ........); //  모든 데이터를 입력하면 앞쪽() 생략가능




===========================
DCL = 데이터 제어어(Control)
===========================
GRANT(권한 부여) REBOKE(권한 제거) COMMIT(처리 적용) ROLLBACK(처리 취소)
